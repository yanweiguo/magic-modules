<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Get started on Magic Modules</title><link>https://googlecloudplatform.github.io/magic-modules/get-started/</link><description>Recent content in Get started on Magic Modules</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://googlecloudplatform.github.io/magic-modules/get-started/index.xml" rel="self" type="application/rss+xml"/><item><title>Generate the providers</title><link>https://googlecloudplatform.github.io/magic-modules/get-started/generate-providers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/get-started/generate-providers/</guid><description>Generate google and google-beta providers # This quickstart guides you through setting up your development environment, making a change to magic-modules, generating provider changes to the google and google-beta Terraform providers, and running tests related to the change.
Before you begin # Install the gcloud CLI. In the Google Cloud console, on the project selector page, select or create a Google Cloud project. Note: If you don&amp;rsquo;t already have a project to use for testing changes to the Terraform providers, create a project instead of selecting an existing poject.</description></item><item><title>How Magic Modules works</title><link>https://googlecloudplatform.github.io/magic-modules/get-started/how-magic-modules-works/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/get-started/how-magic-modules-works/</guid><description>How Magic Modules works # Magic Modules can be thought of as a source of truth for how to map a GCP API resource representation to a Terraform resource (or datasource) representation. Magic Modules uses that mapping (and additional handwritten code where necessary) to generate &amp;ldquo;downstream&amp;rdquo; repositories - in particular, the Terraform providers for Google Platform: google (or TPG) and google-beta (or TPGB).
Generation of the downstream repositories happens for every new commit in a PR (to a temporary branch owned by the modular-magician robot user) and on every merge into the main branch (to the main branch of downstreams).</description></item><item><title>Run provider tests</title><link>https://googlecloudplatform.github.io/magic-modules/get-started/run-provider-tests/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/get-started/run-provider-tests/</guid><description>Run provider tests locally # Note: If you want to test changes you&amp;rsquo;ve made in Magic Modules, you need to first generate the provider you want to test. Setup # Authentication is described in more detail here.
Tests generally assume the following environment variables must be set in order to run tests:
GOOGLE_PROJECT GOOGLE_CREDENTIALS|GOOGLE_CLOUD_KEYFILE_JSON|GCLOUD_KEYFILE_JSON|GOOGLE_USE_DEFAULT_CREDENTIALS GOOGLE_REGION GOOGLE_ZONE Note that the credentials you provide must be granted wide permissions on the specified project.</description></item><item><title>Use built provider</title><link>https://googlecloudplatform.github.io/magic-modules/get-started/use-built-provider/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/get-started/use-built-provider/</guid><description>Use built provider locally # Note: If you want to test changes you&amp;rsquo;ve made in Magic Modules, you need to first generate the provider you want to test. Sometimes, for example for manual testing, you may want to build the provider from source and use it with terraform.
Developer Overrides # Note: Developer overrides are only available in Terraform v0.14 and later. By default Terraform will download providers from the public Registry, but there are several ways to override this behaviour and use providers from other sources.</description></item><item><title>Contributing</title><link>https://googlecloudplatform.github.io/magic-modules/get-started/contributing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/get-started/contributing/</guid><description>General contributing steps # If you haven&amp;rsquo;t done so already, fork the Magic Modules repository into your GitHub account.
Check the issue tracker to see whether your feature has already been requested.
If there&amp;rsquo;s an issue and it already has a dedicated assignee, this indicates that someone might have already started to work on a solution. Otherwise, you&amp;rsquo;re welcome to work on the issue. Check whether the resource you would like to work on already exists in the following places:</description></item><item><title>Provider documentation</title><link>https://googlecloudplatform.github.io/magic-modules/get-started/provider-documentation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/get-started/provider-documentation/</guid><description>Provider documentation # The provider is documented on HashiCorp&amp;rsquo;s Terraform Registry, which includes information about individual resources and datasources, and includes guides to help users configure or upgrade the provider in their projects.
This document includes details about how provider documentation is used by the Terraform Registry, how it is made in the Magic Modules repo, and tools you can use when editing documentation.
There are other pages under How To that describe how to approach making additions to the documentation.</description></item></channel></rss>